<h3>C1 @count</h3>

@inject IJSRuntime js;
@code {
  public int count { get; set; }
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    await base.OnAfterRenderAsync(firstRender);
    if (firstRender)
    {
      await js.InvokeVoidAsync("console.log", new object[] { "#kt_menu_notifications" });
    }
  }
  protected override async Task OnInitializedAsync()
  {
    ReFresh();
  }

  private async Task ReFresh()
  {
    while (true)
    {
      await Task.Delay(1000);
      count = count + 1;
      this.StateHasChanged();
    }
  }
}
